plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'me.ricky.guides'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    /* webflux 의존 설정 추가 */
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    /* non-blocking 처리를 위한 MongoDB 의존 설정 추가 */
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'



    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    /* testContainer 사용*/
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.1"
    testImplementation "org.testcontainers:testcontainers:1.19.3"
    testImplementation "org.testcontainers:junit-jupiter:1.19.3"
    /* mysql testContainer 사용*/
    testImplementation "org.testcontainers:mysql:1.19.3"
    /* mongo testContainer 사용 [https://java.testcontainers.org/modules/databases/mongodb/]*/
    testImplementation "org.testcontainers:mongodb:1.19.3"

    /* non-blocking 테스트용 */
    testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
